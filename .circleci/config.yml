version: 2.1
          
jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run: cd frontend
      - run: npm install
      - run: 
          working_directory: ./frontend
          command: npm run build
            
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run: cd backend
      - run: 
          working_directory: ./backend
          command: npm install
      - run:
          working_directory: ./backend
          command: npm run build
            
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: cd  frontend
      - run: 
          working_directory: ./frontend
          command: npm install
      - run:
          working_directory: ./frontend
          command: npm run test
    
                
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: cd backend
      - run: 
          working_directory: ./backend
          command: npm install
      - run:
          working_directory: ./backend
          command: npm run test
  
  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run: cd frontend
      - run: npm install
      - run: 
          working_directory: ./frontend
          command: npm audit --audit-level=critical

  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run: cd backend
      - run: npm install
      - run:
        working_directory: ./backend
        command: npm audit --audit-level=critical
    
workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]
      - scan-backend:
          requires: [build-backend]

      